name: Intake â†’ YAML PR

on:
  issues:
    types: [opened, edited, labeled]

permissions:
  contents: write
  pull-requests: write
  issues: read

jobs:
  update-yaml:
    if: contains(github.event.issue.labels.*.name, 'intake')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - id: parse
        uses: actions/github-script@v7
        with:
          script: |
            const b = context.payload.issue.body || '';
            function get(lbl) {
              const re = new RegExp(`###\\s+${lbl}[\\s\\S]*?\\n([^#]+)`, 'i');
              const m = b.match(re);
              return m ? m[1].trim() : '';
            }
            core.setOutput('env',   get('Environment'));
            core.setOutput('key',   get('Key'));
            core.setOutput('value', get('Value'));

      - name: Install PyYAML
        run: pip install pyyaml

      - name: Ensure file exists
        run: |
          mkdir -p config
          test -f config/app.yaml || echo -e "envs:\n  dev: {}\n  qa: {}\n  prod: {}" > config/app.yaml

      - name: Update YAML (upsert env.key=value)
        run: |
          python - <<'PY'
          import os, yaml, sys
          path = "config/app.yaml"
          with open(path) as f:
            data = yaml.safe_load(f) or {}
          data.setdefault("envs", {})
          env  = os.environ["ENV"]
          key  = os.environ["KEY"]
          val  = os.environ["VAL"]

          data["envs"].setdefault(env, {})
          # Optional: try to coerce numeric/bool values
          def coerce(s):
            for typ in (int, float):
              try: return typ(s)
              except: pass
            if s.lower() in ("true","false"): return s.lower()=="true"
            return s
          data["envs"][env][key] = coerce(val)

          with open(path, "w") as f:
            yaml.safe_dump(data, f, sort_keys=False)
          print("Updated", path, "-> env:", env, "key:", key, "value:", val)
          PY
        env:
          ENV: ${{ steps.parse.outputs.env }}
          KEY: ${{ steps.parse.outputs.key }}
          VAL: ${{ steps.parse.outputs.value }}

      - name: Open PR
        uses: peter-evans/create-pull-request@v6
        with:
          branch: "bot/update-${{ steps.parse.outputs.env }}-${{ steps.parse.outputs.key }}"
          title: "Update config: ${{ steps.parse.outputs.env }}.${{ steps.parse.outputs.key }}"
          commit-message: "chore: update config/app.yaml for ${{ steps.parse.outputs.env }}.${{ steps.parse.outputs.key }}"
          body: |
            Generated from Issue #${{ github.event.issue.number }}.
            - env: **${{ steps.parse.outputs.env }}**
            - key: **${{ steps.parse.outputs.key }}**
            - value: **${{ steps.parse.outputs.value }}**
